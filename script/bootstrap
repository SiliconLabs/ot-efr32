#!/bin/bash
#
#  Copyright (c) 2021, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euxo pipefail

install_packages_apt()
{
    # apt-get update and install dependencies
    echo 'Installing script dependencies...'
    sudo apt-get update
    sudo apt-get --no-install-recommends install -y \
        coreutils \
        git-lfs \
        ninja-build \
        openjdk-11-jre \
        python3-pip \
        python3-setuptools \
        unzip \
        wget

    echo 'Installing GNU Arm Embedded Toolchain...'
    # Check if GNU Arm Embedded toolchain 10.3 is available via apt
    ARM_GCC_VERSION="10.3"
    apt-cache policy gcc-arm-none-eabi | grep -oP "Candidate: .*${ARM_GCC_VERSION}.*"
    if [ -z $? ]; then
        sudo apt-get install -y gcc-arm-none-eabi
    else
        local arch=$(arch)
        local gcc_download_url="https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-${ARCH}-linux.tar.bz2"
        local gcc_extract_dir="gcc-arm-none-eabi-10.3-2021.10"

        sudo apt-get --no-install-recommends install -y bzip2 ca-certificates wget
        wget --tries 4 --no-check-certificate --quiet ${{ matrix.gcc_download_url }} -O gcc-arm.tar.bz2

        (cd /tmp \
            && wget --tries 4 --no-check-certificate --quiet -c ${gcc_download_url} -O gcc-arm.tar.bz2 \
            && sudo tar xjf gcc-arm.tar.bz2 -C /opt \
            && rm gcc-arm.tar.bz2 \
            && sudo ln -s -f /opt/${gcc_extract_dir}/bin/* /usr/local/bin/.)
    fi
}

install_packages_opkg()
{
    echo 'opkg not supported currently' && false
}

install_packages_rpm()
{
    echo 'rpm not supported currently' && false
}

install_packages_brew()
{
    echo 'Installing script dependencies...'
    brew install coreutils openjdk@11 wget unzip
}

install_packages_source()
{
    echo 'source not supported currently' && false
}

install_packages_pip3()
{
    pip3 install -U cmake==3.22.4
    cmake --version | grep 3.22.4
}

install_packages()
{
    PM=source
    if command -v apt-get; then
        PM=apt
    elif command -v rpm; then
        PM=rpm
    elif command -v opkg; then
        PM=opkg
    elif command -v brew; then
        PM=brew
    fi
    install_packages_$PM

    if command -v pip3; then
        install_packages_pip3
    fi
}

usage() { echo "Usage: $0 [-h] [--fast]" 1>&2; exit 1; }

main()
{
    local fast=false

    # Parse flags
    optspec=":h-:"
    while getopts "$optspec" optchar; do
        case "${optchar}" in
            -)
                case "${OPTARG}" in
                    "fast")
                        fast=true
                        shift 1
                        ;;
                    *)
                        echo "Unknown option --${OPTARG}" >&2
                        usage
                        ;;
                esac
                ;;
            h)
                usage
                ;;
        esac
    done

    install_packages

    if [ "${fast}" = false ]; then
        echo "Bootstrapping openthread"
        "$(dirname "$0")"/../openthread/script/bootstrap
    fi

    echo "Bootstrapping silabs"
    "$(dirname "$0")"/bootstrap_silabs

    echo "Bootstrap completed successfully."
}

main "$@"
